name: Build with MinGW

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  VCPKG_DEFAULT_TRIPLET: x64-mingw-static
  VCPKG_DEFAULT_HOST_TRIPLET: x64-mingw-static

jobs:    
  build:
    name: MinGW-gcc
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: git cmake mingw-w64-x86_64-gcc
        update: true
    
    - name: Restore artifacts, or setup vcpkg for building artifacts
      uses: lukka/run-vcpkg@v10
      id: runvcpkg
      with:
        vcpkgJsonGlob: 'vcpkg.json'
        runVcpkgInstall: true
        runVcpkgFormatString: '[`install`, `--recurse`, `--clean-after-build`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `x64-mingw-static`]'
    
    - name: Configure CMake
      shell: msys2 {0}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DVCPKG_DIR=${{github.workspace}}/vcpkg

    - name: Build
      shell: msys2 {0}
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

#     - name: Test
#       working-directory: ${{github.workspace}}/build
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        # Artifact name
        name: output
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{github.workspace}}/build/notebook
          ${{github.workspace}}/build/${{env.BUILD_TYPE}}
